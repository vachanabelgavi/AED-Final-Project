/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PharmacyEnterpriseRole;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.DeliveryAgent.DeliveryAgent;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import javax.swing.JPanel;
import Business.Network.Network;
import Business.Orders.Order;
import Business.Orders.OrderItem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pannaga
 */
public class ManagePharmaOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmaOrdersJPanel
     */
    
    private JPanel userProcessContainer;
    private Ecosystem business;
    private CustomerDirectory customerDirectory;
    UserAccount ua;
    DeliveryAgent dlvrymn;
    Enterprise enterprise;
    DefaultTableModel dtm;
    ArrayList<DeliveryAgent> d;
    UserAccountDirectory userdir;
    Customer customer;
    private OrderItem itemsdir;
    private Order order;
    private ArrayList<Order> orderplaced = new ArrayList<Order>();
    Organization organization;
    Network network;
     
    public ManagePharmaOrdersJPanel(JPanel userProcessContainer, Ecosystem business,Network network,UserAccountDirectory userdir, Enterprise enterprise, Customer customer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userdir = userdir;
        this.enterprise = enterprise;
        this.customer = customer;
        this.network = network;
        
        
        System.out.println("CAME INTO PHARMA ORDER PANEL");
        dtm = (DefaultTableModel) pharmaOrderTable.getModel();
        
//        if (order.getItemsOrdered() != null){
//               
//            }
//            else{
////                this.itemsdir = new ItemsDirectory();
////                enterprise.setItemsDirectory(itemsdir);
//            }
            
       
        displaycombobox();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pharmaOrderTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        deliverycmb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pharmaOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Product Name", "Name", "Location", "Zipcode", "Price", "Delivery agent"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pharmaOrderTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 803, 186));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 54, -1, -1));

        deliverycmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverycmbActionPerformed(evt);
            }
        });
        add(deliverycmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, 148, -1));

        jLabel1.setText("Assign Delivery agent");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, -1, -1));

        jButton1.setText("Assign");
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 430, 105, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void deliverycmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverycmbActionPerformed
        // TODO add your handling code here:

        
        
    }//GEN-LAST:event_deliverycmbActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> deliverycmb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pharmaOrderTable;
    // End of variables declaration//GEN-END:variables

    private void displaycombobox() {
      
      d = enterprise.getDeliveryAgentsInEnterpiselist();
        for(DeliveryAgent dd : d ){
            deliverycmb.addItem(dd.getUseraccount().getEmployee().getName());
        
        }  
        
    }

    @SuppressWarnings("empty-statement")
    private void populateTable() {
        System.out.println("Inside populate Table");
        dtm.setRowCount(0);
         ArrayList<Order> customerOrder = this.customer.getOrderlist();
         ArrayList<OrderItem> cartOrder = this.customer.getCustomerCart().getCartItems();
      for (Customer customer : this.network.getCustomerDirectory().getCustomerList()) {
          for (Order o : customerOrder) { 
             
              System.out.println("" + o.getOrderId());
               System.out.println("" + customer.getCustomerCart().getCartId());
                System.out.println("" + customer.getName() ); 
                System.out.println("" + customer.getLocation());
                 System.out.println("" + customer.getZipcode());
                  System.out.println("" + o.getOrderPayment().getAmount());   
          Object[] inrow = {o.getOrderId(),customer.getCustomerCart().getCartId(),customer.getName(),customer.getLocation(),customer.getZipcode(), o.getOrderPayment().getAmount(), null};
            dtm.insertRow(dtm.getRowCount(),inrow); 
            System.out.println("done");
            }
      }
       System.out.println("done with populate Table"); 
    }
}
        
        
        
    
